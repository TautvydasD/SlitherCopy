@using Snek.Shared.Board;
@using Snek.Shared;
@using System.Linq;
@inject IJSRuntime JSRuntime;

<div style="width:1000px;height:500px;display:flex;">
    <div style="position:relative; left:30px;top:30px; width:200px;height:400px;border: 5px solid green;background:rgba(60,179,113,0.9)">
        <div>
            <h4>Highscore</h4>
        </div>
        <div>
            Player 1: @Score
        </div>
    </div>

    <div class="row" @onclick="_gameManager.StartGame" @onkeydown="@HandleKeyUp" tabindex="0" @ref="myDiv" style="margin:auto;">
        <div class="col-sm text-center">
            @*<h4>Our Snake ☭</h4>*@
            <table class="snake-map">
                @for (int i = 0; i < MapMatrix.GetLength(0); i++)
                {
                    <tr>
                        @for (int j = 0; j < MapMatrix.GetLength(1); j++)
                        {
                        <td class="snake-tile">
                            @if (_gameManager.snake.Head.pos.Column == j && _gameManager.snake.Head.pos.Row == i)
                            {
                                <div style="width:20px;height:20px;" class="green"></div>
                            }
                            else if (_gameManager.snake.Body.posArr.Any(pos => pos.Row == i && pos.Column == j))
                            {
                                <div style="width:20px;height:20px;" class="red"></div>
                            }
                            else if (food.Column == j && food.Row == i)
                            {
                                <div style="width:20px;height:20px;">
                                    <img src="@fruits[fruitIndex]" style="width:20px;height:20px;" />
                                </div>
                            }
                            else
                            {
                                <div style="width:20px;height:20px;"></div>
                            }
                         
                        </td>
                        }
                    </tr>
                }
            </table>
        </div>
    </div>

</div>

<div style="display:block;height:200px;width:200px;margin:auto;position:relative;border: 5px solid green;background:rgba(60,179,113,0.9);">
    <div style="height: 60px; width: 60px; position: absolute; top: 0px; left:35%">
        <button style="height: 60px; width: 60px;" class="btn btn-primary" @onclick="_gameManager.snake.MoveUp">Up</button>
    </div>
    <div style="height:60px;width:60px;position: absolute;left:35%;bottom:0px">
        <button style="height: 60px; width: 60px;" class="btn btn-primary" @onclick="_gameManager.snake.MoveDown">Down</button>
    </div>
    <div style="height: 60px; width: 60px; position: absolute; top: 34%; left: 0px ">
        <button style="height: 60px; width: 60px;" class="btn btn-primary" @onclick="_gameManager.snake.MoveLeft">Left</button>
    </div>
    <div style="height: 60px; width: 60px; position: absolute; top: 34%; right: 0px ">
        <button style="height: 60px; width: 60px;" class="btn btn-primary" @onclick="_gameManager.snake.MoveRight">Right</button>
    </div>
</div>

@*<div style="position:relative; left: 100px;width:200px;height:400px;border: 5px solid green;background:rgba(60,179,113,0.9)">
        <div>
            <h4>Highscore</h4>
        </div>
        <div>
            Player 1: @Score
        </div>
    </div>*@

@*<div class="jumbotron"
         @onkeydown="@KeyDown"
         tabindex="0"
         @ref="myDiv">
        <h1 class="display-4">
            @letter
        </h1>
    </div>*@


@code {
    public string[] fruits { get; set; } = { "apple.png", "cherry2.png", "pineapple.png",
                                             "rainbowApple.png", "spoiledApple2.png", "speed.png",
                                             "shrink.png", "cash.png"};
    public int fruitIndex { get; set; }
    public int Score { get; set; } = 0;
    public string letter { get; set; } = "";
    public int[,] MapMatrix = new int[10, 10];
    public Coordinates food { get; set; }
    GameManager _gameManager { get; set; }


    protected ElementReference myDiv;  // set by the @ref attribute

    protected override void OnInitialized()
    {
        _gameManager = new GameManager();
        _gameManager.snake.MoveRight();
        GenerateFood();
        _gameManager.MainLoopCompleted += (o, e) => StateHasChanged();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        AddScore(_gameManager.snake.Head.pos, food);
        if (firstRender)
            await JSRuntime.InvokeVoidAsync("SetFocusToElement", myDiv);
    }

    protected void KeyDown(KeyboardEventArgs e)
    {
        letter = $"Pressed: [{e.Key}]";
    }

    protected void HandleKeyUp(KeyboardEventArgs e)
    {
        letter = $"Pressed: [{e.Key}]";
        if (e.Key == "ArrowUp")
            _gameManager.snake.MoveUp();
        else if (e.Key == "ArrowDown")
            _gameManager.snake.MoveDown();
        else if (e.Key == "ArrowLeft")
            _gameManager.snake.MoveLeft();
        else if (e.Key == "ArrowRight")
            _gameManager.snake.MoveRight();
        else if (e.Key == "e")
        {
            Snek.Shared.Entities.PowerUp powerUp = new Snek.Shared.Entities.PowerUp("SpeedBoost");
            powerUp.Name = "SpeedBoost";
            _gameManager.powerUpControl.UsePowerUp(_gameManager.snake, powerUp);
            //Console.WriteLine("Speed" + _gameManager.snake.SpeedBoost);
        }
        else if (e.Key == "r")
        {
            _gameManager.powerUpControl.Discard(0);
            //Console.WriteLine("Speed" + _gameManager.snake.SpeedBoost);
        }
    }

    public void GenerateFood()
    {
        Random rnd = new Random();
        fruitIndex = rnd.Next(0, 8);
        int row = rnd.Next(0, 9);
        int column = rnd.Next(0, 9);
        food = new Coordinates(row, column);
    }
    public void AddScore(Coordinates player, Coordinates food)
    {
        if (player.Column == food.Column && player.Row == food.Row)
        {
            _gameManager.snake.Grow();
            Score++;
            GenerateFood();
        }
    }
}
